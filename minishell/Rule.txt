Ground Rule

0. 최대한 놈에 맞춰서 작성한다.
1. 함수는 하나의 역할만 하게 한다.(그 이상 무조건 분리)
2. 명명시 동사가 먼저 나온다 ex> check_argument()
3. 약어는 최대한 사용하지 않는다.(놈 보다 우선)
4. include가 필요한 소스파일에만 헤더 넣기(리링크 방지, 데이터 절약)

1. 파싱전에 환경변수 받아와야 하는지
2. 파싱테이블 생성 어케하는지
3. 파싱 트리 구현 하는법

1. envp를 받아온다 -> lexer테이블을 만들어야 한다 -> 우리가 수학익힘책 했던거 -> 그것을 수정한다 

1.String 은 완전한 커멘드 1줄을 의미
2.Pipe
3.Redirection
4.Word


오늘의 목표 (8.10)
lexer 구현
 1. lexer 테이블 구축
  1-1 lexer table (되는경우를 다 모아놓은 것 -> 5*5 형태로 그 경우의 수를 다 정의)
	1-1-1 lexer 구조체 -> st_normal 같은 친구 정의하기
	1-1-2 lexer 함수 만들기 
  1-2 reduce table 
	1-2-2 reduce 함수 만들기
2. run lexing까지 해봐!



SYMBOL_ -> TT_
symbol_type ==token_type

meta -> item
NORMAL -> others
metachar -> unique_type
_to_ -> _meet_ 
to_norm -> turn_others

8.24 simple 까지 완료 before print까지 잘 나옴 내일 25일에는
simple print_tree_stack에서 lldb 찍어서 봐야한다
(t_list 말록?) 
내일 은 무쩌권 heredoc 완료하고 집갈 수 있도록 한다

%@ 9시 반에는 시작하고 small talk 을 끊을 수 있는 결단력을 가지기. %@

expr $? + $? 안된다 히잉...